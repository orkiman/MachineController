ARDUINO PROTOCOL - QUICK START
===============================

MINIMAL COMMUNICATION EXAMPLES (Both Directions)

1. CONTROLLER SETUP (PC → Arduino)
   {
     "type": "controller_setup",
     "controllerType": "dots",      // "dots", "line"
     "enabled": true,
     "encoder": 1.5,               // Pulses per mm
     "sensorOffset": 10,           // mm
     "startCurrent": 1.0,          // A (0-3A)
     "startDurationMS": 0.5,       // ms (0-3ms)
     "holdCurrent": 0.5,           // A (0-3A)
     "dotSize": "medium",          // "small", "medium", or "large"
     "pageLength": 100,            // mm (for calibration)
     "guns": [
       {
         "enabled": true,
         "gunId": 0,               // 0-3
         "rows": [
           {"from": 10, "to": 50, "space": 5.0}  // mm, mm, mm
         ]
       }
     ]
   }

2. CALIBRATE REQUEST (PC → Arduino)
   {
     "type": "calibrate",
     "pageLength": 100  // mm
   }

3. CALIBRATE RESPONSE (Arduino → PC)
   {
     "type": "calibration_result",
     "pulsesPerPage": 12345  // Total encoder pulses for the page length
   }

4. HEARTBEAT (PC → Arduino / Arduino → PC) // not implemented yet
   {
     "type": "heartbeat"
   }


NOTES:
- All numeric values should be sent as JSON numbers (no quotes)
- Current values are in Amperes (A)
- Distances are in millimeters (mm)
- Times are in milliseconds (ms)
- The controller will only process commands when enabled
- Only enabled guns will fire according to their row configurations
NOTES:
- The controller setup message is sent whenever settings change or when the enabled state changes
- The 'enabled' field controls whether the controller should be active
- The 'guns' array contains the glue application plan with enabled/disabled state for each gun

ARDUINO CODE SNIPPET:
====================
#include <ArduinoJson.h>

void setup() {
  Serial.begin(115200);
}

void loop() {
  if (Serial.available()) {
    String json = Serial.readString();
    StaticJsonDocument<200> doc;
    deserializeJson(doc, json);
    
    String type = doc["type"];
    if (type == "config") {
      float encoder = doc["encoder"];
      int offset = doc["sensorOffset"];
      // Use values...
    }
    else if (type == "calibrate") {
      int pageLen = doc["pageLength"];
      // Perform calibration...
      Serial.println("{\"type\":\"calibration_result\",\"pulsesPerPage\":12345}");
    }
    else if (type == "run") {
      // Start operation
    }
  }
}
